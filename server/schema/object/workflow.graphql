type WorkflowInstance {
    _id: String
    recordId: String
    workflowStateId: String
    workflowConfigurationId: String
    insertedAt: DateTime @mongoDateConverter
    insertedBy: String
    updatedAt: DateTime @mongoDateConverter
    updatedBy: String
    isDeleted: Boolean
}

type WorkflowConfiguration {
    _id: String
    name: String
    settingPath: String
    insertedAt: DateTime @mongoDateConverter
    insertedBy: String
    updatedAt: DateTime @mongoDateConverter
    updatedBy: String
    isDeleted: Boolean
}

type WorkflowSetting {
    name: String
}

type WorkflowState {
    _id: String
    status: String
    workflowConfigurationId: String
    isStart: Boolean
    insertedAt: DateTime @mongoDateConverter
    insertedBy: String
    updatedAt: DateTime @mongoDateConverter
    updatedBy: String
    isDeleted: Boolean
}

type WorkflowHandler {
    _id: String
    internalName: String
    displayName: String
    isStart: String
    startStateId: String
    endStateId: String
    workflowConfigurationId: String
    insertedAt: DateTime @mongoDateConverter
    insertedBy: String
    updatedAt: DateTime @mongoDateConverter
    updatedBy: String
    isDeleted: Boolean
}

type WorkflowAuthorizeCustomAction {
    _id: String
    workflowCustomActionId: String
    workflowStateId: String
    workflowConfigurationId: String
    authorize: Boolean
    insertedAt: DateTime @mongoDateConverter
    insertedBy: String
    updatedAt: DateTime @mongoDateConverter
    updatedBy: String
    isDeleted: Boolean
}

type WorkflowCustomAction {
    _id: String
    name: String
    insertedAt: DateTime @mongoDateConverter
    insertedBy: String
    updatedAt: DateTime @mongoDateConverter
    updatedBy: String
    isDeleted: Boolean
}

type WorkflowAuthorizeRoleCustomAction {
    _id: String
    roleId: String
    workflowCustomActionId: String
    insertedAt: DateTime @mongoDateConverter
    insertedBy: String
    updatedAt: DateTime @mongoDateConverter
    updatedBy: String
    isDeleted: Boolean
}

type WorkflowAuthorizeUserRole {
    _id: String
    roleId: String,
    workflowHandlerId: String
    insertedAt: DateTime @mongoDateConverter
    insertedBy: String
    updatedAt: DateTime @mongoDateConverter
    updatedBy: String
    isDeleted: Boolean
}

type Query {
    allWorkflowSetting: [WorkflowSetting]
}

type Mutation{
    createListItemWorkflowConfiguration(path: String): String  @isAuthenticated
    createWorkflowCustomAction(name: String, workflowConfigurationId: String): WorkflowCustomAction @isAuthenticated
    createWorkflowAuthorizeCustomAction(workflowCustomActionId: String, workflowStateId: String, authorize: Boolean, workflowConfigurationId: String): WorkflowAuthorizeCustomAction @isAuthenticated
    createWorkflowAuthorizeRoleCustomAction(workflowAuthorizeCustomActionId: String, roleId: String): WorkflowAuthorizeRoleCustomAction @isAuthenticated
    createWorkflowAuthorizeUserRole(workflowHandlerId: String, roleId: String): WorkflowAuthorizeUserRole @isAuthenticated
}